################################
##  Name selection priority
################################


--- taglist
---

label:          [ name, loc_name, brand, operator ]
entrance:       [ name, ref ]
place:          [ place_name, name ]
street:         [ 'addr:street', name ]
destination:    [ destination, label, name ]
house:          [ 'addr:housename', 'addr:housenumber' ]
note:           [ note ]
opening_hours:  [ opening_hours ]
maxheight:      [ maxheight ]
maxweight:      [ maxweight ]
street2:        [ 'addr2:street', 'addr:street2', 'addr:street' ]
house2:         [ 'addr2:housenumber', 'addr:housenumber2', 'addr:housenumber' ]

phone:          [ 'contact:phone', phone ]
website:        [ 'contact:website', website, url ]
email:          [ 'contact:email', email ]
fax:            [ 'contact:fax', fax ]


################################
##  Field presets
################################

--- presets
---
contacts:
    Phone: %phone
    WebPage: %website
    Email: %email
    Fax: %fax

building:
    Label: %house
    Floors: !!perl/code |-
      {
        my $tags = shift()->{tag};
        my $levels = extract_number($tags->{'building:levels'});
        return $levels  if $levels;
        $levels = int(extract_number($tags->{'building:height'} || $tags->{'height'} || 0) / 3);
        return $levels || undef;
      }

road:
  RouteParamExt:
    selector: if
    condition:
      or:
        - highway = living_street
        - living_street = yes
        - access = customers|destination
        - vehicle = customers|destination
        - motor_vehicle = customers|destination
        - motorcar = customers|destination
    then: 1

  TrafficLanes: !!perl/code |-
    {
      my $tags = shift()->{tag};
      my $lt = extract_number($tags->{'lanes'}) // q{};
      my $lf = extract_number($tags->{'lanes:forward'}) // q{};
      my $lb = extract_number($tags->{'lanes:backward'}) // q{};

      if ( $lt ) {
          $lf = length $lb ? $lt-$lb : int($lt/2+0.5)  if !length $lf;
          $lb = length $lf ? $lt-$lf : int($lt/2)      if !length $lb;
      }

      return undef  if !length $lf || !length $lb || $lt<0 || $lb<0;
      return "$lf,0,0,$lb,0,0";
    }

  TurnLanes: !!perl/code |-
    {
      return shift()->{tag}->{'turn:lanes'};
    }
  TurnLanesForward: !!perl/code |-
    {
      return shift()->{tag}->{'turn:lanes:forward'};
    }
  TurnLanesBackward: !!perl/code |-
    {
      return shift()->{tag}->{'turn:lanes:backward'};
    }

  LegalSpeed:
    selector: if
    condition: maxspeed = \d.*
    then: %maxspeed
    else:
      selector: if
      condition: highway = motorway
      then: 110
      else:
        selector: if
        condition:
          or:
            - highway = living_street
            - living_street = yes
        then: 20
        else:
          selector: if
          condition: inside_city
          then: 60
          else: 90

################################
##  Tags to skip
################################


--- skip_tags
---

created_by:         1



################################
##  Tags for comment
################################


--- comment
---

abandoned:          1
access:             1
aerialway:          1
aeroway:            1
admin_level:        1
amenity:            1
area:               1
barrier:            1
boundary:           1
bridge:             1
building:           1
burnt:              1
capital:            1
craft:              1
crossing:           1
denomination:       1
footway:            1
highway:            1
historic:           1
junction:           1
layer:              1
landuse:            1
lanes:              1
leisure:            1
man_made:           1
maxheight:          1
maxspeed:           1
maxweight:          1
military:           1
natural:            1
office:             1
oneway:             1
place:              1
population:         1
power:              1
railway:            1
religion:           1
route:              1
service:            1
shop:               1
smoothness:         1
sport:              1
surface:            1
tourism:            1
tracktype:          1
traffic_calming:    1
tunnel:             1
waterway:           1
whitewater:         1



################################
##  Common types
################################


--- types
---

background:
    type:       0x4B
    level_h:    4

sea:
    type:       0x28
    level_h:    4



################################
##  Access restrictions
################################


--- yesno
---

1:              1
yes:            1
true:           1
designated:     1
permissive:     1
customers:      1

0:              0
no:             0
false:          0
private:        0
restricted:     0
very_horrible:  0
impassable:     0



################################
##  Transport restrictions
################################

# emergency, delivery, car, bus, taxi, foot, bike, truck

--- transport
---

- key:     motorroad
  val:     0,0,0,0,0,1,1,0
  mode:    -1

- key:     access
  val:     1,1,1,1,1,1,1,1

- key:     vehicle
  val:     1,1,1,1,1,0,1,1
- key:     motor_vehicle
  val:     1,1,1,1,1,0,0,1

- key:     motorcar
  val:     1,1,1,1,1,0,0,1

- key:     foot
  val:     0,0,0,0,0,1,0,0
- key:     bicycle
  val:     0,0,0,0,0,0,1,0
- key:     psv
  val:     0,0,0,1,1,0,0,0
- key:     bus
  val:     0,0,0,1,0,0,0,0
- key:     taxi
  val:     0,0,0,0,1,0,0,0
- key:     hgv
  val:     0,0,0,0,0,0,0,1
- key:     goods
  val:     0,1,0,0,0,0,0,0
- key:     emergency
  val:     1,0,0,0,0,0,0,0

- key:     smoothness
  val:     1,1,1,1,1,0,0,1



################################
##  Barriers
################################

# emergency, delivery, car, bus, taxi, foot, bike, truck
# default: 1,1,1,1,1,1,1,1 - restricts all

--- barrier
---

block:          1,1,1,1,1,0,1,1
stile:          1,1,1,1,1,0,1,1
chain:          1,1,1,1,1,0,1,1
bollard:        1,1,1,1,1,0,0,1
bus_trap:       1,1,1,0,1,0,0,1
toll_booth:     0,0,0,0,0,0,0,0
cattle_grid:    0,0,0,0,0,0,0,0
entrance:       0,0,0,0,0,0,0,0
border_control: 0,0,0,0,0,0,0,0
